apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}
  labels:
{{ include "chart.labels" . | indent 4 }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "chart.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "chart.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.container.image.repository }}:{{ .Values.container.image.tag }}"
          imagePullPolicy: {{ .Values.container.image.pullPolicy }}
          envFrom:
          - configMapRef:
              name: "{{ .Chart.Name }}-config"
          - secretRef:
              name: "{{ .Chart.Name }}-secret"
          ports:
            - name: http
              containerPort: {{ .Values.container.port }}
              protocol: TCP
          volumeMounts:
            - name: staticfiles
              mountPath: /var/www/api/
        - name: nginx-sidecar
          image: nginx:stable
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/conf.d
              readOnly: true
            - name: staticfiles
              mountPath: /var/www/api/
              readOnly: true
          livenessProbe:
            httpGet:
              path: {{ .Values.sidecar.nginx.probe.path }}
              port: {{ .Values.service.port }}
            initialDelaySeconds: {{ .Values.sidecar.nginx.probe.initialDelaySeconds }}
            periodSeconds: {{ .Values.sidecar.nginx.probe.periodSeconds }}
      initContainers:
        - name: {{ .Values.initContainer.name }}
          image: "{{  .Values.container.image.repository }}:{{ .Values.container.image.tag }}"
          imagePullPolicy: {{ .Values.container.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: "{{ .Chart.Name }}-config"
      volumes:
        - name: nginx-conf
          configMap:
            name: backend-api-nginx
        - name: staticfiles
          emptyDir: {}
