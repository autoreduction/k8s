apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "frontend.fullname" . }}
  labels:
    {{- include "frontend.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "frontend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "frontend.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "frontend.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - secretRef:
                name: webapp-secret
            - configMapRef:
                name: webapp-config
          ports:
            - name: gunicorn
              containerPort: 8000
              protocol: TCP
          volumeMounts:
            - name: staticfiles
              mountPath: /var/www/api/
          resources:
            {{- toYaml .Values.resources | nindent 12 }}

        - name: nginx-sidecar
          image: nginx:stable
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8002
              protocol: TCP
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/conf.d
            - name: staticfiles
              mountPath: /var/www/api/

      initContainers:
        - name: init-collectstatic
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          env:
            - name: AUTOREDUCTION_PRODUCTION
              value: "True"
          command: ["autoreduce-webapp-manage", "collectstatic", "--noinput"]
          volumeMounts:
            - name: staticfiles
              mountPath: /var/www/api/

      volumes:
        - name: nginx-conf
          configMap:
            name: backend-api-nginx
        - name: staticfiles
          emptyDir: {}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
