apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: {{ .Values.ingressroute.name }}
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  entryPoints:
    - web
  routes:
    - match: {{ .Values.ingressroute.routes.match }}
      kind: Rule
      middlewares:
        - name: frontend-linkerd-middleware
      services:
        - name: frontend-gunicorn
          port: {{ .Values.service.gunicorn.port }}
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: {{ .Values.ingressroute.name }}-tls
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  entryPoints:
    - websecure
  routes:
    - match: {{ .Values.ingressroute.routes.match }}
      kind: Rule
      middlewares:
        - name: frontend-linkerd-middleware
      services:
        - name: frontend-gunicorn
          port: {{ .Values.service.gunicorn.port }}
  tls:
    secretName: ssl-cert
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: {{ .Values.ingressroute.name }}-static
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`reduce.isis.cclrc.ac.uk`) && PathPrefix(`/static`) 
      kind: Rule
      middlewares:
        - name: frontend-linkerd-middleware
      services:
        - name: frontend-nginx
          port: {{ .Values.service.nginx.port }}
  tls:
    secretName: ssl-cert
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: frontend-linkerd-middleware
spec:
  headers:
    customRequestHeaders:
      l5d-dst-override: "frontend.webapp.svc.cluster.local:80"