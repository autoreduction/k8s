apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: webapp
  labels:
    app.kubernetes.io/instance: mysql
    app.kubernetes.io/name: mysql
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: mysql
      app.kubernetes.io/name: mysql
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: mysql
        app.kubernetes.io/name: mysql
    spec:
      serviceAccountName: mysql-service-account
      containers:
        - name: mysql
          image: "mysql:8.0.28"
          imagePullPolicy: IfNotPresent
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: {{ db_secrets.root_password }}

          ports:
            - name: mysql
              containerPort: 3306
              protocol: TCP
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
            - name: mysql-initdb
              mountPath: /docker-entrypoint-initdb.d
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - "mysqladmin ping -u root -p${MYSQL_ROOT_PASSWORD}"
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            exec:
              # Check we can execute queries over TCP (skip-networking is off).
              command:
                - sh
                - -c
                - mysql -h127.0.0.1 -uroot -p${MYSQL_ROOT_PASSWORD} -e'SELECT 1'
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 3
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pvc
        - name: mysql-initdb
          configMap:
            name: mysql-initdb-config
