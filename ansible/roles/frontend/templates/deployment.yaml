apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: webapp
  labels:
    app.kubernetes.io/instance: frontend
    app.kubernetes.io/name: frontend
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: frontend
      app.kubernetes.io/name: frontend
  template:
    metadata:
      annotations:
        linkerd.io/inject: enabled
      labels:
        app.kubernetes.io/instance: frontend
        app.kubernetes.io/name: frontend
    spec:
      serviceAccountName: frontend-service-account
      containers:
        - name: frontend
          image: "ghcr.io/autoreduction/autoreduce-frontend:{{ frontend_tag }}"
          imagePullPolicy: IfNotPresent
          envFrom:
            - secretRef:
                name: webapp-secret
            - configMapRef:
                name: webapp-config
          ports:
            - name: gunicorn
              containerPort: 8000
              protocol: TCP
          volumeMounts:
            - name: staticfiles
              mountPath: /var/www/api/
            - name: archive-mount
              mountPath: /isis
          livenessProbe:
            httpGet:
              path: /alive
              port: 8001
            periodSeconds: 10
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /ready
              port: 8001
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 3

        - name: nginx-sidecar
          image: nginx:stable
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8002
              protocol: TCP
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/conf.d
            - name: staticfiles
              mountPath: /var/www/api/
          readinessProbe:
            httpGet:
              path: "/static/"
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5

      initContainers:
        - name: init-collectstatic
          image: "ghcr.io/autoreduction/autoreduce-frontend:{{ frontend_tag }}"
          env:
            - name: AUTOREDUCTION_PRODUCTION
              value: "True"
          command: ["autoreduce-webapp-manage", "collectstatic", "--noinput"]
          volumeMounts:
            - name: staticfiles
              mountPath: /var/www/api/

      volumes:
        - name: nginx-conf
          configMap:
            name: backend-api-nginx
        - name: staticfiles
          emptyDir: {}
        - name: archive-mount
          hostPath:
            path: /isis
            type: Directory
