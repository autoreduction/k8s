apiVersion: apps/v1
kind: Deployment
metadata:
  name: autoreduce-frontend
  labels:
    app: autoreduce-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: autoreduce-frontend
  template:
    metadata:
      labels:
        app: autoreduce-frontend
    spec:
      containers:
        - name: autoreduce-frontend
          image: ghcr.io/autoreduction/autoreduce-frontend:latest
          envFrom:
            - configMapRef:
                name: webapp-config
          ports:
            - containerPort: 8000
              name: gunicorn
          volumeMounts:
            - name: staticfiles
              mountPath: /var/www/api/

        - name: nginx-sidecar
          image: nginx:stable
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 3
            periodSeconds: 3
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/conf.d
              readOnly: true
            - name: staticfiles
              mountPath: /var/www/api/

      initContainers:
        - name: init-collectstatic
          image: ghcr.io/autoreduction/autoreduce-frontend:latest
          env:
            - name: AUTOREDUCTION_PRODUCTION
              value: "True"
          command: ["autoreduce-webapp-manage", "collectstatic", "--noinput"]
          volumeMounts:
            - name: staticfiles
              mountPath: /var/www/api/

      volumes:
        - name: nginx-conf
          configMap:
            name: backend-api-nginx
        - name: staticfiles
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  selector:
    app: autoreduce-frontend
  ports:
    - name: http
      port: 80
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: frontend-ingress
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  entryPoints:
    - web
  routes:
    - match: PathPrefix(`/`)
      kind: Rule
      services:
        - name: frontend-service
          port: 80
